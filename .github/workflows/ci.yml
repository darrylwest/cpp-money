name: CI Build and Test

on:
  push:
    branches: [ main, develop ]
  workflow_dispatch:

jobs:
  build-test-demo:
    runs-on: ubuntu-latest
    container: darrylwest/ubuntu24-gpp1420:latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Install system dependencies
      run: |
        apt-get update
        apt-get install -y \
          cmake \
          ninja-build \
          wget \
          git \
          libspdlog-dev \
          libfmt-dev \
          pkg-config \
          locales \
          locales-all
        
        # Generate en_US.UTF-8 locale for std::format locale support
        locale-gen en_US.UTF-8
        update-locale LANG=en_US.UTF-8
        
    - name: Verify compiler and build tool versions
      run: |
        echo "=== Compiler Versions ==="
        gcc --version
        g++ --version
        echo "=== CMake Version ==="
        cmake --version
        echo "=== Testing C++23 Support with <print> ==="
        echo '#include <print>' > test_cpp23.cpp
        echo 'int main() { std::println("C++23 with <print> works: {}", 42); return 0; }' >> test_cpp23.cpp
        if g++ -std=c++23 test_cpp23.cpp -o test_cpp23 2>/dev/null; then
          echo "C++23 <print> compilation: SUCCESS"
          ./test_cpp23
        else
          echo "C++23 <print> compilation: FAILED"
          g++ -std=c++23 test_cpp23.cpp -o test_cpp23 -v
          exit 1
        fi
        rm -f test_cpp23.cpp test_cpp23
        
    - name: Install Catch2 v3
      run: |
        git clone https://github.com/catchorg/Catch2.git
        cd Catch2
        git checkout v3.7.1
        cmake -B build -S . -DBUILD_TESTING=OFF
        cmake --build build
        cmake --install build
        
    - name: Initialize build
      run: |
        rm -rf build/
        mkdir build
        cd build
        cmake ..
      
    - name: Build project
      run: |
        cd build
        make -j$(nproc)
      
    - name: Run unit tests
      run: |
        cd build
        make -j$(nproc)
        cd ..
        ./build/money_tests
      
    - name: Run shopping cart demo
      run: |
        echo "=== Running Shopping Cart Demo ==="
        cd build
        make -j$(nproc)
        cd ..
        ./build/cart_demo
        
    - name: Verify demo output
      run: |
        echo "=== Verifying Demo Output Contains Expected Elements ==="
        ./build/cart_demo > demo_output.txt 2>&1
        
        # Check for key elements in demo output
        if grep -q "Shopping Cart Demo" demo_output.txt; then
          echo "✓ Demo title found"
        else
          echo "✗ Demo title missing"
          exit 1
        fi
        
        if grep -q "Cart total:" demo_output.txt; then
          echo "✓ Cart total calculation found"
        else
          echo "✗ Cart total calculation missing"
          exit 1
        fi
        
        if grep -q "Tax (8%):" demo_output.txt; then
          echo "✓ Tax calculation found"
        else
          echo "✗ Tax calculation missing"
          exit 1
        fi
        
        if grep -q "Shopping cart is empty" demo_output.txt; then
          echo "✓ Cart clearing functionality found"
        else
          echo "✗ Cart clearing functionality missing"
          exit 1
        fi
        
        echo "=== Demo Output Verification: SUCCESS ==="
        
    - name: Package artifacts
      run: |
        mkdir -p artifacts/bin artifacts/lib artifacts/include
        cp build/money_tests artifacts/bin/
        cp build/cart_demo artifacts/bin/
        cp -r include/* artifacts/include/ 2>/dev/null || true
        find build -name "*.a" -exec cp {} artifacts/lib/ \; 2>/dev/null || true
        tar -czf money-ubuntu-24.10-release.tar.gz artifacts/
        
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: money-ubuntu-24.10-release
        path: money-ubuntu-24.10-release.tar.gz
        retention-days: 30
        
